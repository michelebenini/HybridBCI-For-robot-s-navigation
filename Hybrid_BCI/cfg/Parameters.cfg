#!/usr/bin/env python
PACKAGE = "hybrid_bci"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("max_p300",    int_t,    0, "Max people detected", 4,  0, 10)
gen.add("fixed_p300",    double_t,    0, "Fixed probability of people detected", 0.7,  0, 1)

gen.add("max_direction",    int_t,    0, "maximum number of direction", 360,  0, 360)

gen.add("start_mean",    int_t,    0, "Mean of the initial gaussian", 180,  0, 360)
gen.add("start_std",    int_t,    0, "Standar deviation of the initial Gaussian", 180,  0, 360)
gen.add("p300_stddev",    int_t,    0, "Standard deviation of the Gaussian generated by P300 command", 5,  0, 360)
gen.add("mi_stddev",    int_t,    0, "Standard deviation of the Gaussian generated by motor imagery command", 50,  0, 360)
gen.add("stay_stddev",    int_t,    0, "Standard deviation of the Gaussian generated to mantain the current robot's direction", 100,  0, 360)
gen.add("move_stddev",    int_t,    0, "Standard deviation of the Gaussian generated when the robot moves for a while confirming the user's will", 10,  0, 360)


gen.add("new_stay_effect",    double_t,    0, "Wheight of the Gaussian generated to mantain the current robot's direction", 0.3,  0, 1)
gen.add("move_effect",    double_t,    0, "Wheight of the Gaussian generated when the robot moves for a while confirming the user's will", 0.03,  0, 1)
gen.add("p300_past_effect",    double_t,    0, "Wheight of the Gaussian generated by P300 command", 0.3,  0, 1)
gen.add("mi_past_effect",    double_t,    0, "Wheight of the Gaussian generated by motor imagery command", 0.15,  0, 1)
gen.add("mi_degree",    int_t,    0, "Degree of shift of a motor imagery command", 45,  0, 360)

exit(gen.generate(PACKAGE, "hybrid_bci", "Parameters"))