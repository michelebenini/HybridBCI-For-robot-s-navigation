#!/usr/bin/env python
PACKAGE = "hybrid_bci"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("max_p300",    int_t,    0, "Max people detected", 4,  0, 10)
gen.add("fixed_p300",    double_t,    0, "Fixed probability of people detected", 0.7,  0, 1)

gen.add("max_direction",    int_t,    0, "maximum number of direction", 360,  0, 360)

gen.add("start_mean",    int_t,    0, "Mean of the initial gaussian", 180,  0, 360)
gen.add("start_std",    int_t,    0, "Standar deviation of the initial Gaussian", 180,  0, 360)
gen.add("p300_stddev",    int_t,    0, "Standard deviation of the Gaussian generated by P300 command", 5,  0, 360)
gen.add("mi_stddev",    int_t,    0, "Standard deviation of the Gaussian generated by motor imagery command", 50,  0, 360)
gen.add("stay_stddev",    int_t,    0, "Standard deviation of the Gaussian generated to mantain the current robot's direction", 100,  0, 360)
gen.add("move_stddev",    int_t,    0, "Standard deviation of the Gaussian generated when the robot moves for a while confirming the user's will", 10,  0, 360)


gen.add("new_stay_effect",    double_t,    0, "Wheight of the Gaussian generated to mantain the current robot's direction", 0.3,  0, 1)
gen.add("move_effect",    double_t,    0, "Wheight of the Gaussian generated when the robot moves for a while confirming the user's will", 0.03,  0, 1)
gen.add("p300_past_effect",    double_t,    0, "Wheight of the Gaussian generated by P300 command", 0.3,  0, 1)
gen.add("mi_past_effect",    double_t,    0, "Wheight of the Gaussian generated by motor imagery command", 0.15,  0, 1)
gen.add("mi_degree",    int_t,    0, "Degree of shift of a motor imagery command", 45,  0, 360)

gen.add("kinet_fov",    int_t,    62, "Kinetic Field Of View", 62,  0, 360)

gen.add("version",    double_t,    1.0, "version", 1.0, 1.0, 1.0)
gen.add("p300_pipe",    str_t,    0, "pipe for p300",  "/busP")
gen.add("mi_pipe",    str_t,    0, "pipe for motorimagery",  "/busM")
gen.add("mi_cmd_left",    str_t,    0,  "label of command left, mi both feet","771")
gen.add("mi_cmd_right",    str_t,    0,  "label of command right, mi_both_hands","773")
gen.add("family",    int_t,    0,  "event family", 0, 0, 0)
gen.add("mi_threshold",    double_t,    0.70, "Threshold ", 0.7, 0.0, 1.0)

gen.add("p300_task",    int_t,    513, "p300_task", 513,513,513)
gen.add("unknown",    int_t,    519, "unknown", 519,519,519)

gen.add("attemp",    int_t, 1792, "attemp", 1792,1792,1792)
gen.add("off",    int_t,    32768, "Off", 32768,32768,32768)
gen.add("prediction",    int_t,    1536, "prediction", 1536,1536,1536)
gen.add("flash",    int_t,    1280, "flash", 1280,1280,1280)


exit(gen.generate(PACKAGE, "hybrid_bci", "Parameters"))